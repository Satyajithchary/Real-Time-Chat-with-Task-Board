// server.js
const express = require('express');
const http = require('http');
const socketIo = require('socket.io');
const mongoose = require('mongoose');
const jwt = require('jsonwebtoken');

const app = express();
const server = http.createServer(app);
const io = socketIo(server);

// Connect to MongoDB
mongoose.connect('mongodb://localhost:27017/chatApp', {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

// Define mongoose models for users, chat rooms, and tasks

// Middleware for JWT authentication

io.on('connection', (socket) => {
  console.log('A user connected');

  socket.on('joinRoom', ({ room }) => {
    // Handle room joining
  });

  socket.on('leaveRoom', ({ room }) => {
    // Handle room leaving
  });

  socket.on('sendMessage', ({ room, text }) => {
    // Handle new messages
    io.to(room).emit('message', { text });
  });

  socket.on('createTask', ({ room, text }) => {
    // Handle creating tasks
    io.to(room).emit('taskUpdate', updatedTasks);
  });

  // Similar handling for editing, moving, deleting tasks

  socket.on('disconnect', () => {
    console.log('A user disconnected');
  });
});

const PORT = process.env.PORT || 5000;
server.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`);
});
